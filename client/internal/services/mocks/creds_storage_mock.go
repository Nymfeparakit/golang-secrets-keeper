// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nymfeparakit/gophkeeper/client/internal/services (interfaces: CredentialsStorage)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCredentialsStorage is a mock of CredentialsStorage interface.
type MockCredentialsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockCredentialsStorageMockRecorder
}

// MockCredentialsStorageMockRecorder is the mock recorder for MockCredentialsStorage.
type MockCredentialsStorageMockRecorder struct {
	mock *MockCredentialsStorage
}

// NewMockCredentialsStorage creates a new mock instance.
func NewMockCredentialsStorage(ctrl *gomock.Controller) *MockCredentialsStorage {
	mock := &MockCredentialsStorage{ctrl: ctrl}
	mock.recorder = &MockCredentialsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCredentialsStorage) EXPECT() *MockCredentialsStorageMockRecorder {
	return m.recorder
}

// GetToken mocks base method.
func (m *MockCredentialsStorage) GetToken() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToken indicates an expected call of GetToken.
func (mr *MockCredentialsStorageMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockCredentialsStorage)(nil).GetToken))
}

// SaveCredentials mocks base method.
func (m *MockCredentialsStorage) SaveCredentials(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveCredentials", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveCredentials indicates an expected call of SaveCredentials.
func (mr *MockCredentialsStorageMockRecorder) SaveCredentials(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveCredentials", reflect.TypeOf((*MockCredentialsStorage)(nil).SaveCredentials), arg0, arg1)
}
