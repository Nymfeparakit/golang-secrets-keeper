// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nymfeparakit/gophkeeper/client/internal/services (interfaces: UpdateDeleteCardService)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	dto "github.com/Nymfeparakit/gophkeeper/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockUpdateDeleteCardService is a mock of UpdateDeleteCardService interface.
type MockUpdateDeleteCardService struct {
	ctrl     *gomock.Controller
	recorder *MockUpdateDeleteCardServiceMockRecorder
}

// MockUpdateDeleteCardServiceMockRecorder is the mock recorder for MockUpdateDeleteCardService.
type MockUpdateDeleteCardServiceMockRecorder struct {
	mock *MockUpdateDeleteCardService
}

// NewMockUpdateDeleteCardService creates a new mock instance.
func NewMockUpdateDeleteCardService(ctrl *gomock.Controller) *MockUpdateDeleteCardService {
	mock := &MockUpdateDeleteCardService{ctrl: ctrl}
	mock.recorder = &MockUpdateDeleteCardServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdateDeleteCardService) EXPECT() *MockUpdateDeleteCardServiceMockRecorder {
	return m.recorder
}

// DeleteLocalSecret mocks base method.
func (m *MockUpdateDeleteCardService) DeleteLocalSecret(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLocalSecret", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLocalSecret indicates an expected call of DeleteLocalSecret.
func (mr *MockUpdateDeleteCardServiceMockRecorder) DeleteLocalSecret(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLocalSecret", reflect.TypeOf((*MockUpdateDeleteCardService)(nil).DeleteLocalSecret), arg0, arg1)
}

// DeleteRemoteSecret mocks base method.
func (m *MockUpdateDeleteCardService) DeleteRemoteSecret(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRemoteSecret", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRemoteSecret indicates an expected call of DeleteRemoteSecret.
func (mr *MockUpdateDeleteCardServiceMockRecorder) DeleteRemoteSecret(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRemoteSecret", reflect.TypeOf((*MockUpdateDeleteCardService)(nil).DeleteRemoteSecret), arg0, arg1)
}

// UpdateLocalSecret mocks base method.
func (m *MockUpdateDeleteCardService) UpdateLocalSecret(arg0 context.Context, arg1 dto.CardInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLocalSecret", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateLocalSecret indicates an expected call of UpdateLocalSecret.
func (mr *MockUpdateDeleteCardServiceMockRecorder) UpdateLocalSecret(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLocalSecret", reflect.TypeOf((*MockUpdateDeleteCardService)(nil).UpdateLocalSecret), arg0, arg1)
}

// UpdateRemoteSecret mocks base method.
func (m *MockUpdateDeleteCardService) UpdateRemoteSecret(arg0 context.Context, arg1 dto.CardInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRemoteSecret", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateRemoteSecret indicates an expected call of UpdateRemoteSecret.
func (mr *MockUpdateDeleteCardServiceMockRecorder) UpdateRemoteSecret(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRemoteSecret", reflect.TypeOf((*MockUpdateDeleteCardService)(nil).UpdateRemoteSecret), arg0, arg1)
}
