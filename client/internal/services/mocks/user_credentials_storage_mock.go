// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nymfeparakit/gophkeeper/client/internal/services (interfaces: UserCredentialsStorage)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	dto "github.com/Nymfeparakit/gophkeeper/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockUserCredentialsStorage is a mock of UserCredentialsStorage interface.
type MockUserCredentialsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockUserCredentialsStorageMockRecorder
}

// MockUserCredentialsStorageMockRecorder is the mock recorder for MockUserCredentialsStorage.
type MockUserCredentialsStorageMockRecorder struct {
	mock *MockUserCredentialsStorage
}

// NewMockUserCredentialsStorage creates a new mock instance.
func NewMockUserCredentialsStorage(ctrl *gomock.Controller) *MockUserCredentialsStorage {
	mock := &MockUserCredentialsStorage{ctrl: ctrl}
	mock.recorder = &MockUserCredentialsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserCredentialsStorage) EXPECT() *MockUserCredentialsStorageMockRecorder {
	return m.recorder
}

// GetCredentials mocks base method.
func (m *MockUserCredentialsStorage) GetCredentials() (*dto.UserCredentials, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCredentials")
	ret0, _ := ret[0].(*dto.UserCredentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCredentials indicates an expected call of GetCredentials.
func (mr *MockUserCredentialsStorageMockRecorder) GetCredentials() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCredentials", reflect.TypeOf((*MockUserCredentialsStorage)(nil).GetCredentials))
}
