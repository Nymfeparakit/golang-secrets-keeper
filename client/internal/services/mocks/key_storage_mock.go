// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nymfeparakit/gophkeeper/client/internal/services (interfaces: KeyStorage)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKeyStorage is a mock of KeyStorage interface.
type MockKeyStorage struct {
	ctrl     *gomock.Controller
	recorder *MockKeyStorageMockRecorder
}

// MockKeyStorageMockRecorder is the mock recorder for MockKeyStorage.
type MockKeyStorageMockRecorder struct {
	mock *MockKeyStorage
}

// NewMockKeyStorage creates a new mock instance.
func NewMockKeyStorage(ctrl *gomock.Controller) *MockKeyStorage {
	mock := &MockKeyStorage{ctrl: ctrl}
	mock.recorder = &MockKeyStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyStorage) EXPECT() *MockKeyStorageMockRecorder {
	return m.recorder
}

// GetUserKey mocks base method.
func (m *MockKeyStorage) GetUserKey() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserKey")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserKey indicates an expected call of GetUserKey.
func (mr *MockKeyStorageMockRecorder) GetUserKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserKey", reflect.TypeOf((*MockKeyStorage)(nil).GetUserKey))
}

// SaveUserKey mocks base method.
func (m *MockKeyStorage) SaveUserKey(arg0 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveUserKey", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveUserKey indicates an expected call of SaveUserKey.
func (mr *MockKeyStorageMockRecorder) SaveUserKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUserKey", reflect.TypeOf((*MockKeyStorage)(nil).SaveUserKey), arg0)
}
