// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nymfeparakit/gophkeeper/client/internal/services (interfaces: UserCryptoService)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserCryptoService is a mock of UserCryptoService interface.
type MockUserCryptoService struct {
	ctrl     *gomock.Controller
	recorder *MockUserCryptoServiceMockRecorder
}

// MockUserCryptoServiceMockRecorder is the mock recorder for MockUserCryptoService.
type MockUserCryptoServiceMockRecorder struct {
	mock *MockUserCryptoService
}

// NewMockUserCryptoService creates a new mock instance.
func NewMockUserCryptoService(ctrl *gomock.Controller) *MockUserCryptoService {
	mock := &MockUserCryptoService{ctrl: ctrl}
	mock.recorder = &MockUserCryptoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserCryptoService) EXPECT() *MockUserCryptoServiceMockRecorder {
	return m.recorder
}

// CreateUserKey mocks base method.
func (m *MockUserCryptoService) CreateUserKey(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserKey", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserKey indicates an expected call of CreateUserKey.
func (mr *MockUserCryptoServiceMockRecorder) CreateUserKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserKey", reflect.TypeOf((*MockUserCryptoService)(nil).CreateUserKey), arg0)
}
