// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Nymfeparakit/gophkeeper/client/internal/services (interfaces: SecretCryptoService)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSecretCryptoService is a mock of SecretCryptoService interface.
type MockSecretCryptoService struct {
	ctrl     *gomock.Controller
	recorder *MockSecretCryptoServiceMockRecorder
}

// MockSecretCryptoServiceMockRecorder is the mock recorder for MockSecretCryptoService.
type MockSecretCryptoServiceMockRecorder struct {
	mock *MockSecretCryptoService
}

// NewMockSecretCryptoService creates a new mock instance.
func NewMockSecretCryptoService(ctrl *gomock.Controller) *MockSecretCryptoService {
	mock := &MockSecretCryptoService{ctrl: ctrl}
	mock.recorder = &MockSecretCryptoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretCryptoService) EXPECT() *MockSecretCryptoServiceMockRecorder {
	return m.recorder
}

// DecryptSecret mocks base method.
func (m *MockSecretCryptoService) DecryptSecret(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecryptSecret", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DecryptSecret indicates an expected call of DecryptSecret.
func (mr *MockSecretCryptoServiceMockRecorder) DecryptSecret(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecryptSecret", reflect.TypeOf((*MockSecretCryptoService)(nil).DecryptSecret), arg0)
}

// EncryptSecret mocks base method.
func (m *MockSecretCryptoService) EncryptSecret(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EncryptSecret", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// EncryptSecret indicates an expected call of EncryptSecret.
func (mr *MockSecretCryptoServiceMockRecorder) EncryptSecret(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EncryptSecret", reflect.TypeOf((*MockSecretCryptoService)(nil).EncryptSecret), arg0)
}
